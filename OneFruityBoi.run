# Optimites: OneFruityBoi
# Connor McDowall 530913386 cmcd398
# Josh  Beckett
# Alexander Zhao 
# Optimisation Run File

###############################################################################################################################   
# Load files for Avocados
############################################################################################################################### 
reset;
model OneFruityBoi.mod;
data OneFruityAvoBoi.dat;

###############################################################################################################################   
# Set the appropriate costs
############################################################################################################################### 
# Working out the transportation costs
let {(i,j) in ARCS} Cost[i,j]
	:= if (i in SUPPLIERS)
	then supplycost[i,j]
	else if (j in MARKETS)
	then marketcost[i,j];

###############################################################################################################################   
# Solve the problem for Avocados
############################################################################################################################### 
option solver gurobi;
solve;

###############################################################################################################################   
# Display the outputs for Avocados
############################################################################################################################### 
display TotalCost;
display Built;
display Flow;

###############################################################################################################################   
# Reset and Load files for Apples
############################################################################################################################### 
reset;
model OneFruityBoi.mod;
data OneFruityAppleBoi.dat;

###############################################################################################################################   
# Set the appropriate costs
############################################################################################################################### 
# Working out the transportation costs
let {(i,j) in ARCS} Cost[i,j]
	:= if (i in SUPPLIERS)
	then supplycost[i,j]
	else if (j in MARKETS)
	then marketcost[i,j];

###############################################################################################################################   
# Solve the problem for Apples
############################################################################################################################### 
option solver gurobi;
solve;

###############################################################################################################################   
# Display the outputs for Apples
############################################################################################################################### 
display TotalCost;
display Built;
display Flow;